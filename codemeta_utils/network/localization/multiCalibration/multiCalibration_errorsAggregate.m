%function errors=multiCalibration_errorsAggregate(errors)
%Given a cell array of errors generated by multiCalibration_errorsCompute
%over multiple trials, generate a new error cell array by concatenating the
%fields intelligently
function errorsAggregated=multiCalibration_errorsAggregate(errors)
if ~iscell(errors)
    return
end

errorsAggregated=errors{1};
if isstruct(errorsAggregated)
    fieldNames=fieldnames(errorsAggregated);
    NFields=length(fieldNames);
    for iField=1:NFields
        fn=fieldNames{iField};
        e=cellfun(@(x) x.(fn),errors,'UniformOutput',false);
        errorsAggregated.(fn)=catCell(1,e{:});
    end
else
    errorsAggregated=catCell(1,errors{:});
end

function cCat=catCell(dim,varargin)
c=varargin;
Nc=length(c);
cCat=c{1};
Nc2=length(cCat);
for ic=2:Nc
    cCurrent=c{ic};
    for ic2=1:Nc2
        if isnumeric(cCat{ic2})
            cCat{ic2}=cat(dim,cCat{ic2},cCurrent{ic2});
        end
        if isstruct(cCat{ic2})
            cCat{ic2}=catStructRecursive(dim,cCat{ic2},cCurrent{ic2});
        end
    end
end
